CREATE TABLE IF NOT EXISTS location
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat FLOAT                                   NOT NULL,
    lon FLOAT                                   NOT NULL,
    CONSTRAINT pk_location PRIMARY KEY (id)
);

create table IF NOT EXISTS category
(
    id   bigint generated by default as identity
        primary key,
    name varchar(50)
);

CREATE TABLE IF NOT EXISTS compilation
(
    id     bigint generated by default as identity
        primary key,
    pinned boolean,
    title  varchar(50)
);

CREATE TABLE IF NOT EXISTS ewm_user
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(250)                            NOT NULL,
    email VARCHAR(254)                            NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS event
(
    id                 bigint generated by default as identity,
    annotation         varchar(2000),
    created_on         timestamp,
    description        varchar(7000),
    event_date         timestamp,
    state              varchar(255),
    paid               boolean,
    participant_limit  integer,
    published_on       timestamp,
    request_moderation boolean,
    title              varchar(120),
    category_id        bigint not null references category (id),
    initiator_id       bigint not null references ewm_user (id),
    location_id        bigint not null references location (id),
    CONSTRAINT pk_event PRIMARY KEY (id)
);

create table if not exists request
(
    id           bigint generated by default as identity,
    created      timestamp,
    status       varchar(255),
    event_id     bigint not null references event (id),
    requester_id bigint not null references ewm_user (id),
    CONSTRAINT pk_request PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilation_event
(
    event_id       bigint NOT NULL REFERENCES event (id),
    compilation_id bigint NOT NULL REFERENCES compilation (id),
    CONSTRAINT pk_compilation_event PRIMARY KEY (event_id, compilation_id)
);

CREATE TABLE IF NOT EXISTS comment
(
    id                 bigint generated by default as identity,
    text               varchar   not null,
    created            timestamp not null,
    author_id          bigint    not null references ewm_user (id),
    event_id           bigint    not null references event (id),
    modified_by_admin  timestamp,
    modified_by_author timestamp,
    CONSTRAINT pk_comment PRIMARY KEY (id)


)